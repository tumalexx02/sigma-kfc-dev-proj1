networks:
  dev:

services:
  nginx:
    image: nginx:stable-alpine
    container_name: nginx-prod
    ports:
      - "${NGINX_PORT:-80}:${NGINX_PORT:-80}"
    volumes:
      - './nginx.conf.template:/etc/nginx/nginx.conf.template'
      - './entrypoint.sh:/entrypoint.sh'
    environment:
      FRONTEND_HOST: ${FRONTEND_HOST:-frontendprod}
      FRONTEND_PORT: ${FRONTEND_PORT:-3000}
      BACKEND_HOST: ${BACKEND_HOST:-backendprod}
      BACKEND_PORT: ${BACKEND_PORT:-8000}
      NGINX_PORT: ${NGINX_PORT:-80}
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME:-localhost}
    entrypoint: /entrypoint.sh
    networks:
      - dev
    depends_on:
      - frontendprod
      - backendprod

  postgresprod:
    image: postgres:15
    container_name: postgres-prod
    environment:
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD:-postgres}"
      POSTGRES_DB: "${POSTGRES_DB:-postgresweb}"
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - dev

  backendprod:
    image: backend:new
    container_name: backend-prod
    ports:
      - "${BACKEND_PORT:-8000}:${BACKEND_PORT:-8000}"
    environment:
      DB_PASSWORD: "${POSTGRES_PASSWORD:-postgres}"
      salt: "${salt:-kfcpassword}"
      PORT: "${BACKEND_PORT:-8000}"
      JWT_SECRET: "${JWT_SECRET:-KLJzxlcjzkxljcklasnndlasjd13}"
      dbhost: postgresprod
    depends_on:
      - postgresprod
    networks:
      - dev

  frontendprod:
    build:
      context: ./frontend
      args:
        VITE_BACKEND_PORT: "${BACKEND_PORT:-8000}"
    container_name: frontend-prod
    ports:
      - "${FRONTEND_PORT:-3000}:80"
    networks:
      - dev

volumes:
  postgres-data:
    driver: local